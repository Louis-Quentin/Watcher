{"ast":null,"code":"var _jsxFileName = \"/home/alouis-quentin/Watcher/src/front/src/MapSettings.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport styles from './css/MapSettings.module.css'; // Adjust the path as necessary\nimport buttonImage from './css/img/map_settings.png'; // Adjust the path to your image as necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapSettings = () => {\n  _s();\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\n  const [rangeValue, setRangeValue] = useState(50); // Initialize range value\n\n  const toggleSettingsVisibility = () => {\n    setIsSettingsVisible(!isSettingsVisible);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.absoluteButton,\n      style: {\n        backgroundImage: `url(${buttonImage})`\n      },\n      onClick: toggleSettingsVisibility\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.settingsScreen} ${isSettingsVisible ? styles.visible : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.rangeContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"rangeInput\",\n          children: [rangeValue, \" Km\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          className: styles.rangeBar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(MapSettings, \"zHPZf21PcgZdDSrK/XaMOCntYh4=\");\n_c = MapSettings;\nexport default MapSettings;\nvar _c;\n$RefreshReg$(_c, \"MapSettings\");","map":{"version":3,"names":["React","useState","styles","buttonImage","jsxDEV","_jsxDEV","MapSettings","_s","isSettingsVisible","setIsSettingsVisible","rangeValue","setRangeValue","toggleSettingsVisibility","className","container","children","absoluteButton","style","backgroundImage","onClick","fileName","_jsxFileName","lineNumber","columnNumber","settingsScreen","visible","rangeContainer","htmlFor","type","rangeBar","_c","$RefreshReg$"],"sources":["/home/alouis-quentin/Watcher/src/front/src/MapSettings.tsx"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport styles from './css/MapSettings.module.css';  // Adjust the path as necessary\nimport buttonImage from './css/img/map_settings.png';  // Adjust the path to your image as necessary\n\nconst MapSettings = () => {\n    const [isSettingsVisible, setIsSettingsVisible] = useState(false);\n    const [rangeValue, setRangeValue] = useState(50); // Initialize range value\n\n    const toggleSettingsVisibility = () => {\n        setIsSettingsVisible(!isSettingsVisible);\n      };\n      return (\n        <div className={styles.container}>\n          {/* Other content */}\n          <button\n            className={styles.absoluteButton}\n            style={{ backgroundImage: `url(${buttonImage})` }}\n            onClick={toggleSettingsVisibility}\n          ></button>\n          \n          <div className={`${styles.settingsScreen} ${isSettingsVisible ? styles.visible : ''}`}>\n            <h3>Settings</h3>\n            <div className={styles.rangeContainer}>\n                <label htmlFor=\"rangeInput\">{rangeValue} Km</label>\n                <input type=\"range\" className={styles.rangeBar} />\n            </div>\n          </div>\n        </div>\n      );\n    };\nexport default MapSettings;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,8BAA8B,CAAC,CAAE;AACpD,OAAOC,WAAW,MAAM,4BAA4B,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAElD,MAAMW,wBAAwB,GAAGA,CAAA,KAAM;IACnCH,oBAAoB,CAAC,CAACD,iBAAiB,CAAC;EAC1C,CAAC;EACD,oBACEH,OAAA;IAAKQ,SAAS,EAAEX,MAAM,CAACY,SAAU;IAAAC,QAAA,gBAE/BV,OAAA;MACEQ,SAAS,EAAEX,MAAM,CAACc,cAAe;MACjCC,KAAK,EAAE;QAAEC,eAAe,EAAG,OAAMf,WAAY;MAAG,CAAE;MAClDgB,OAAO,EAAEP;IAAyB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eAEVlB,OAAA;MAAKQ,SAAS,EAAG,GAAEX,MAAM,CAACsB,cAAe,IAAGhB,iBAAiB,GAAGN,MAAM,CAACuB,OAAO,GAAG,EAAG,EAAE;MAAAV,QAAA,gBACpFV,OAAA;QAAAU,QAAA,EAAI;MAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBlB,OAAA;QAAKQ,SAAS,EAAEX,MAAM,CAACwB,cAAe;QAAAX,QAAA,gBAClCV,OAAA;UAAOsB,OAAO,EAAC,YAAY;UAAAZ,QAAA,GAAEL,UAAU,EAAC,KAAG;QAAA;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnDlB,OAAA;UAAOuB,IAAI,EAAC,OAAO;UAACf,SAAS,EAAEX,MAAM,CAAC2B;QAAS;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChB,EAAA,CAzBAD,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AA0BjB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}